apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ include "backup-repository-server.fullname" . }}
    labels:
        {{- include "backup-repository-server.labels" . | nindent 8 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
    replicas: {{ .Values.replicaCount }}
  {{- end }}
    selector:
        matchLabels:
          {{- include "backup-repository-server.selectorLabels" . | nindent 10 }}
    template:
        metadata:
          {{- with .Values.podAnnotations }}
            annotations:
              {{- toYaml . | nindent 16 }}
          {{- end }}
            labels:
              {{- include "backup-repository-server.selectorLabels" . | nindent 16 }}
        spec:
            # todo: implement termination procedure, so the pending upload would block from termination
            #       and terminating container will block from taking new uploads
            terminationGracePeriodSeconds: 300
          {{- with .Values.imagePullSecrets }}
            imagePullSecrets:
              {{- toYaml . | nindent 16 }}
          {{- end }}
            serviceAccountName: {{ include "backup-repository-server.serviceAccountName" . }}

            {{- with .Values.podSecurityContext }}
            securityContext:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            containers:
                - name: {{ .Chart.Name }}
                  securityContext:
                    {{- toYaml .Values.securityContext | nindent 20 }}
                  image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
                  imagePullPolicy: {{ .Values.image.pullPolicy }}

                  args:
                      - "--health-check-key={{ .Values.settings.healthCode }}"
                      - "--provider=kubernetes"
                      - "--namespace={{ .Release.Namespace }}"

                  {{- with .Values.env }}
                  env:
                  {{- range $key, $value := . }}
                      - name: {{ $key }}
                        value: "{{ $value }}"
                  {{- end }}
                  {{- end }}

                  envFrom:
                      - secretRef:
                            name: {{ include "backup-repository-server.fullname" . }}-credentials
                            optional: false

                  ports:
                      - name: http
                        containerPort: 8080
                        protocol: TCP

                  # todo: distinct liveness and readiness - make separate endpoints
                  livenessProbe:
                      failureThreshold: 1
                      terminationGracePeriodSeconds: 10
                      httpGet:
                          path: /health
                          port: http
                          httpHeaders:
                              - name: Authorization
                                value: "{{ .Values.settings.healthCode }}"
                  readinessProbe:
                      httpGet:
                          path: /health?code={{ .Values.settings.healthCode }}
                          port: http
                          httpHeaders:
                              - name: Authorization
                                value: "{{ .Values.settings.healthCode }}"
                  resources:
                    {{- toYaml .Values.resources | nindent 20 }}
          {{- with .Values.nodeSelector }}
            nodeSelector:
              {{- toYaml . | nindent 14 }}
          {{- end }}
          {{- with .Values.affinity }}
            affinity:
              {{- toYaml . | nindent 14 }}
          {{- end }}
          {{- with .Values.tolerations }}
            tolerations:
              {{- toYaml . | nindent 14 }}
          {{- end }}
