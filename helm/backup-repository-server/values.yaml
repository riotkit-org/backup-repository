# Default values for backup-repository-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

settings:
    healthCode: changeme

# supported values: sealedSecrets, plain
# when using sealedSecrets please paste already ENCRYPTED secrets into `.secrets` section
secretsType: plain

secrets:
    BR_JWT_SECRET_KEY: "changeme-important!" # MANDATORY
    BR_DB_HOSTNAME: "postgres.backup-repository.svc.cluster.local"
    BR_DB_PASSWORD: "postgres"
    BR_DB_USERNAME: "postgres"
    BR_DB_NAME: "backup-repository"
    BR_DB_PORT: "5432"

env:
    # BR_USE_GOOGLE_CLOUD: true
    BR_LOG_LEVEL: info
    BR_STORAGE_DRIVER_URL: "s3://backups?endpoint=minio.backup-repository.svc.cluster.local:9000&disableSSL=true&s3ForcePathStyle=true&region=eu-central-1"

image:
    repository: ghcr.io/riotkit-org/backup-repository
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

# use additional `kind: Service` of LoadBalancer type for testing, to expose service ports on your local machine and on CI
devPort:
    enable: false
    port: 30081

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

podAnnotations: {}
podSecurityContext: {}

securityContext:
    capabilities:
        drop: ["ALL"]
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    # runAsUser: 1000

service:
    type: ClusterIP
    port: 8080

ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
        - host: backups.example.org
          paths:
              - path: /
                pathType: ImplementationSpecific
    tls: []

route:
    enabled: false
    host: backups.example.org
    yaml: {}  # extra settings on spec level e.g. put TLS settings there

resources:
    limits:
        cpu: 2
        memory: 1Gi
    requests:
        cpu: 50m
        memory: 128Mi

autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

health:
    liveness:
        enabled: true
        attributes:
            failureThreshold: 1
            terminationGracePeriodSeconds: 10
    readiness:
        enabled: true
        attributes: {}

nodeSelector: {}
tolerations: []
affinity: {}
