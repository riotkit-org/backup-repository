name: Test
on:
    pull_request:
    push:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: "riotkit-org/backup-repository"

permissions:
    packages: write

jobs:
    test-and-release-snapshot:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                  go-version: 1.19

            - name: Build
              run: "make build"

            - name: Test
              run: "make test"
              if: "!contains(github.event.head_commit.message, '!test skip')"

            - name: Convert coverage to lcov format
              uses: jandelgado/gcov2lcov-action@v1.0.8
              if: "!contains(github.event.head_commit.message, '!test skip')"

            - name: Coveralls
              uses: coverallsapp/github-action@1.1.3
              if: "!contains(github.event.head_commit.message, '!test skip')"
              with:
                github-token: ${{ secrets.github_token }}
                path-to-lcov: coverage.lcov

            # =======
            # Docker
            # =======

            - name: Log in to the Container registry
              uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@9dc751fe249ad99385a2583ee0d084c400eee04e
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            - name: Build and release to container registry
              uses: docker/build-push-action@v2
              with:
                  context: .
                  push: true
                  tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:snapshot
                  labels: ${{ steps.meta.outputs.labels }}

    test-on-kubernetes:
        uses: riotkit-org/.github/.github/workflows/python.release.yaml@main
        with:
            pythonVersion: 3.11
            testCmd: "make k3d skaffold-deploy integration-test"
