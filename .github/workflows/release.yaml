name: Release
on:
    push:
        tags:
            - '*'

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: "riotkit-org/backup-repository"

permissions: write-all

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Set up Go
              uses: actions/setup-go@v2
              with:
                  go-version: 1.17

            - name: Build
              run: "make build"

            - name: Release binaries to GitHub releases
              uses: goreleaser/goreleaser-action@v2
              with:
                  distribution: goreleaser
                  version: latest
                  args: release --rm-dist
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - uses: actions/upload-artifact@v2
              with:
                  name: binary
                  path: .build

    release-docker:
        runs-on: ubuntu-latest
        needs: ["build"]
        steps:
            - uses: actions/download-artifact@v2
              with:
                  name: binary

            - name: Log in to the Container registry
              uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@e5622373a38e60fb6d795a4421e56882f2d7a681
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            - name: Build and release to container registry
              uses: docker/build-push-action@v2
              with:
                  context: .
                  push: ${{ startsWith(github.ref, 'refs/tags/') }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}


    release-archlinux-pkg:
        runs-on: ubuntu-latest
        needs: ["build"]
        steps:
            - uses: actions/download-artifact@v2
              with:
                  name: binary

            - name: Create Arch Linux package
              uses: 2m/arch-pkgbuild-builder@v1.18
              with:
                  target: 'pkgbuild'
                  pkgname: './'

            - name: Release Arch Linux package
              uses: softprops/action-gh-release@v1
              with:
                  files: "backup-repository-*.pkg.tar.zst"
